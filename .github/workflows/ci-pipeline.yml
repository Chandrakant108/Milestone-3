name: CI Pipeline - Code Quality & Regression Tests

on:
  push:
    branches:
      - master
  pull_request:
  schedule:
    # Runs every night at 2:00 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:

jobs:
  # --------------------------
  # Qodana Code Quality Scan
  # --------------------------
  qodana-scan:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      checks: write
    steps:
      # Step 1: Checkout repository
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Step 2: Run Qodana scan
      - name: Qodana Scan
        uses: JetBrains/qodana-action@v2025.2
        env:
          QODANA_TOKEN: ${{ secrets.QODANA_TOKEN }}
        with:
          pr-mode: false
          use-caches: true
          post-pr-comment: true
          use-annotations: true
          upload-result: true
          push-fixes: 'none'
          output-path: qodana-results

      # Step 3: Upload SARIF for GitHub Code Scanning
      - name: Upload Qodana SARIF
        if: always()
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: qodana-results/sarif/qodana.sarif.json
          checkout_path: ${{ github.workspace }}
          token: ${{ secrets.GITHUB_TOKEN }}

      # Step 4: Upload Qodana HTML report
      - name: Upload Qodana HTML report
        uses: actions/upload-artifact@v4
        with:
          name: qodana-html-report
          path: qodana-results/report

  # --------------------------
  # Regression Test Suite
  # --------------------------
  regression-tests:
    runs-on: ubuntu-latest
    needs: qodana-scan
    strategy:
      matrix:
        java-version: [23]
    steps:
      # Checkout repo
      - uses: actions/checkout@v4

      # Set up Java
      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: ${{ matrix.java-version }}

      # Cache Maven dependencies
      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      # Run parallel UI + API tests
      - name: Run UI and API Tests
        run: mvn clean test "-Dsurefire.parallel=classes" "-Dsurefire.threadCount=10"

      # Upload HTML reports
      - name: Upload HTML Reports
        uses: actions/upload-artifact@v4
        with:
          name: html-reports
          path: artifacts/reports/*.html

      # Upload CSV reports
      - name: Upload CSV Reports
        uses: actions/upload-artifact@v4
        with:
          name: csv-reports
          path: artifacts/reports/*.csv

      # Upload Excel reports
      - name: Upload Excel Reports
        uses: actions/upload-artifact@v4
        with:
          name: excel-reports
          path: artifacts/reports/*.xlsx

      # Upload Screenshots
      - name: Upload Screenshots
        uses: actions/upload-artifact@v4
        with:
          name: screenshots
          path: artifacts/screenshots/*.png

      # Upload API JSON artifacts
      - name: Upload API JSON Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: api-artifacts
          path: artifacts/api/*.json

      # Optional: Call analytics endpoint
      - name: Refresh Analytics
        run: |
          curl -X POST https://jsonplaceholder.typicode.com/posts \
               -H "Content-Type: application/json" \
               -d '{"triggered_by": "github_actions"}'
